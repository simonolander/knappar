// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var ReactDOMRe = require("reason-react/src/ReactDOMRe.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Button$ReactTemplate = require("./Button.bs.js");

var component = ReasonReact.reducerComponent("ButtonBoard");

function index_to_column(width, index) {
  return Caml_int32.mod_(index, width);
}

function index_to_row(width, index) {
  return Caml_int32.div(index, width);
}

function toggle_button(button) {
  return /* record */[
          /* index */button[/* index */0],
          /* on */!button[/* on */1]
        ];
}

function make(width, height, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var x = function (index) {
                return Caml_int32.mod_(index, width) * 110;
              };
              var y = function (index) {
                return Caml_int32.div(index, width) * 110;
              };
              var buttons = $$Array.map((function (button) {
                      return ReasonReact.element(undefined, undefined, Button$ReactTemplate.make(x(button[/* index */0]), y(button[/* index */0]), 100, 100, button[/* on */1], (function () {
                                        return Curry._1(self[/* send */3], /* Click */[button[/* index */0]]);
                                      }), /* array */[]));
                    }), self[/* state */1][/* buttons */0]);
              return ReactDOMRe.createElementVariadic("svg", {
                          height: "1000",
                          width: "1000"
                        }, buttons);
            }),
          /* initialState */(function () {
              var numberOfButtons = Caml_int32.imul(width, height);
              var buttons = $$Array.init(numberOfButtons, (function (index) {
                      return /* record */[
                              /* index */index,
                              /* on */false
                            ];
                    }));
              return /* record */[/* buttons */buttons];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              var index = action[0];
              var button = Caml_array.caml_array_get(state[/* buttons */0], index);
              var newButton_000 = /* index */button[/* index */0];
              var newButton_001 = /* on */!button[/* on */1];
              var newButton = /* record */[
                newButton_000,
                newButton_001
              ];
              var newButtons = $$Array.copy(state[/* buttons */0]);
              Caml_array.caml_array_set(newButtons, index, newButton);
              return /* Update */Block.__(0, [/* record */[/* buttons */newButtons]]);
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.index_to_column = index_to_column;
exports.index_to_row = index_to_row;
exports.toggle_button = toggle_button;
exports.make = make;
/* component Not a pure module */
